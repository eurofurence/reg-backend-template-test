package main

import (
	"bufio"
	"fmt"
	"log"
	"os"
	"regexp"
	"strings"
)

var regexTypeBegins = regexp.MustCompile(`^type .* {$`)

func main() {
	fmt.Printf(`// Code generated by generate.sh using openapi-generator-cli. DO NOT EDIT.

package %s

import "time"

var _ = time.Now

`, packageNameArg())

	enabled := false
	scanner := bufio.NewScanner(os.Stdin)
	for scanner.Scan() {
		line := scanner.Text()
		if strings.HasPrefix(line, "type Nullable") {
			// ignore
		} else if regexTypeBegins.MatchString(line) {
			fmt.Println(line)
			enabled = true
		} else if line == "}" && enabled {
			fmt.Println(line)
			fmt.Println()
			enabled = false
		} else if enabled {
			fmt.Println(line)
		}
	}

	if err := scanner.Err(); err != nil {
		log.Println(err)
		os.Exit(2)
	}
}

func packageNameArg() string {
	if len(os.Args) != 2 {
		log.Println("required first argument missing: package name")
		os.Exit(1)
	}
	return os.Args[1]
}
